/*
 * FF4J (ff4j.org) WebAPI
 * Administrate and operate all tasks on your features through this api
 *
 * OpenAPI spec version: 1.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FlippingStrategyApiBean;
import io.swagger.client.model.PropertyApiBean;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Representation of a feature
 */
@ApiModel(description = "Representation of a feature")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-28T16:56:05.648-07:00")
public class FeatureApiBean {
  @SerializedName("uid")
  private String uid = null;

  @SerializedName("enable")
  private Boolean enable = false;

  @SerializedName("description")
  private String description = null;

  @SerializedName("group")
  private String group = null;

  @SerializedName("permissions")
  private List<String> permissions = null;

  @SerializedName("flippingStrategy")
  private FlippingStrategyApiBean flippingStrategy = null;

  @SerializedName("customProperties")
  private Map<String, PropertyApiBean> customProperties = null;

  public FeatureApiBean uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * unique feature identifier
   * @return uid
  **/
  @ApiModelProperty(required = true, value = "unique feature identifier")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public FeatureApiBean enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

   /**
   * status of feature
   * @return enable
  **/
  @ApiModelProperty(required = true, value = "status of feature")
  public Boolean getEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public FeatureApiBean description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description of feature
   * @return description
  **/
  @ApiModelProperty(value = "description of feature")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FeatureApiBean group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Group of the feature if exists, it's single
   * @return group
  **/
  @ApiModelProperty(value = "Group of the feature if exists, it's single")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public FeatureApiBean permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public FeatureApiBean addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<String>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Role and profiles authorized on feature
   * @return permissions
  **/
  @ApiModelProperty(value = "Role and profiles authorized on feature")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }

  public FeatureApiBean flippingStrategy(FlippingStrategyApiBean flippingStrategy) {
    this.flippingStrategy = flippingStrategy;
    return this;
  }

   /**
   * Flipping strategy if exist
   * @return flippingStrategy
  **/
  @ApiModelProperty(value = "Flipping strategy if exist")
  public FlippingStrategyApiBean getFlippingStrategy() {
    return flippingStrategy;
  }

  public void setFlippingStrategy(FlippingStrategyApiBean flippingStrategy) {
    this.flippingStrategy = flippingStrategy;
  }

  public FeatureApiBean customProperties(Map<String, PropertyApiBean> customProperties) {
    this.customProperties = customProperties;
    return this;
  }

  public FeatureApiBean putCustomPropertiesItem(String key, PropertyApiBean customPropertiesItem) {
    if (this.customProperties == null) {
      this.customProperties = new HashMap<String, PropertyApiBean>();
    }
    this.customProperties.put(key, customPropertiesItem);
    return this;
  }

   /**
   * Custom properties if they exist
   * @return customProperties
  **/
  @ApiModelProperty(value = "Custom properties if they exist")
  public Map<String, PropertyApiBean> getCustomProperties() {
    return customProperties;
  }

  public void setCustomProperties(Map<String, PropertyApiBean> customProperties) {
    this.customProperties = customProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureApiBean featureApiBean = (FeatureApiBean) o;
    return Objects.equals(this.uid, featureApiBean.uid) &&
        Objects.equals(this.enable, featureApiBean.enable) &&
        Objects.equals(this.description, featureApiBean.description) &&
        Objects.equals(this.group, featureApiBean.group) &&
        Objects.equals(this.permissions, featureApiBean.permissions) &&
        Objects.equals(this.flippingStrategy, featureApiBean.flippingStrategy) &&
        Objects.equals(this.customProperties, featureApiBean.customProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, enable, description, group, permissions, flippingStrategy, customProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureApiBean {\n");
    
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    flippingStrategy: ").append(toIndentedString(flippingStrategy)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


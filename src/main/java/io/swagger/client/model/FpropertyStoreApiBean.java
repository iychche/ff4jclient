/*
 * FF4J (ff4j.org) WebAPI
 * Administrate and operate all tasks on your features through this api
 *
 * OpenAPI spec version: 1.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CacheApiBean;
import java.util.ArrayList;
import java.util.List;

/**
 * property store resource representation
 */
@ApiModel(description = "property store resource representation")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-28T16:56:05.648-07:00")
public class FpropertyStoreApiBean {
  @SerializedName("type")
  private String type = null;

  @SerializedName("numberOfProperties")
  private Integer numberOfProperties = null;

  @SerializedName("properties")
  private List<String> properties = new ArrayList<String>();

  @SerializedName("cache")
  private CacheApiBean cache = null;

  public FpropertyStoreApiBean type(String type) {
    this.type = type;
    return this;
  }

   /**
   * classname of implementation
   * @return type
  **/
  @ApiModelProperty(required = true, value = "classname of implementation")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public FpropertyStoreApiBean numberOfProperties(Integer numberOfProperties) {
    this.numberOfProperties = numberOfProperties;
    return this;
  }

   /**
   * number of properties
   * @return numberOfProperties
  **/
  @ApiModelProperty(required = true, value = "number of properties")
  public Integer getNumberOfProperties() {
    return numberOfProperties;
  }

  public void setNumberOfProperties(Integer numberOfProperties) {
    this.numberOfProperties = numberOfProperties;
  }

  public FpropertyStoreApiBean properties(List<String> properties) {
    this.properties = properties;
    return this;
  }

  public FpropertyStoreApiBean addPropertiesItem(String propertiesItem) {
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * list of properties
   * @return properties
  **/
  @ApiModelProperty(required = true, value = "list of properties")
  public List<String> getProperties() {
    return properties;
  }

  public void setProperties(List<String> properties) {
    this.properties = properties;
  }

  public FpropertyStoreApiBean cache(CacheApiBean cache) {
    this.cache = cache;
    return this;
  }

   /**
   * if a cachestore is defined
   * @return cache
  **/
  @ApiModelProperty(required = true, value = "if a cachestore is defined")
  public CacheApiBean getCache() {
    return cache;
  }

  public void setCache(CacheApiBean cache) {
    this.cache = cache;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FpropertyStoreApiBean fpropertyStoreApiBean = (FpropertyStoreApiBean) o;
    return Objects.equals(this.type, fpropertyStoreApiBean.type) &&
        Objects.equals(this.numberOfProperties, fpropertyStoreApiBean.numberOfProperties) &&
        Objects.equals(this.properties, fpropertyStoreApiBean.properties) &&
        Objects.equals(this.cache, fpropertyStoreApiBean.cache);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, numberOfProperties, properties, cache);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FpropertyStoreApiBean {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    numberOfProperties: ").append(toIndentedString(numberOfProperties)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


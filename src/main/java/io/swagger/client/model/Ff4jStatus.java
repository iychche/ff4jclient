/*
 * FF4J (ff4j.org) WebAPI
 * Administrate and operate all tasks on your features through this api
 *
 * OpenAPI spec version: 1.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Authorization;
import io.swagger.client.model.EventRepositoryApiBean;
import io.swagger.client.model.FeatureStoreApiBean;

/**
 * ff4j resource representation
 */
@ApiModel(description = "ff4j resource representation")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-28T16:56:05.648-07:00")
public class Ff4jStatus {
  @SerializedName("uptime")
  private String uptime = null;

  @SerializedName("autocreate")
  private Boolean autocreate = false;

  @SerializedName("version")
  private String version = null;

  @SerializedName("featuresStore")
  private FeatureStoreApiBean featuresStore = null;

  @SerializedName("eventRepository")
  private EventRepositoryApiBean eventRepository = null;

  @SerializedName("authorizationsManager")
  private Authorization authorizationsManager = null;

  public Ff4jStatus uptime(String uptime) {
    this.uptime = uptime;
    return this;
  }

   /**
   * uptime of the application
   * @return uptime
  **/
  @ApiModelProperty(required = true, value = "uptime of the application")
  public String getUptime() {
    return uptime;
  }

  public void setUptime(String uptime) {
    this.uptime = uptime;
  }

  public Ff4jStatus autocreate(Boolean autocreate) {
    this.autocreate = autocreate;
    return this;
  }

   /**
   * feature are created if not exist in store
   * @return autocreate
  **/
  @ApiModelProperty(required = true, value = "feature are created if not exist in store")
  public Boolean getAutocreate() {
    return autocreate;
  }

  public void setAutocreate(Boolean autocreate) {
    this.autocreate = autocreate;
  }

  public Ff4jStatus version(String version) {
    this.version = version;
    return this;
  }

   /**
   * current version of ff4j library
   * @return version
  **/
  @ApiModelProperty(required = true, value = "current version of ff4j library")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public Ff4jStatus featuresStore(FeatureStoreApiBean featuresStore) {
    this.featuresStore = featuresStore;
    return this;
  }

   /**
   * feature store resource representation
   * @return featuresStore
  **/
  @ApiModelProperty(required = true, value = "feature store resource representation")
  public FeatureStoreApiBean getFeaturesStore() {
    return featuresStore;
  }

  public void setFeaturesStore(FeatureStoreApiBean featuresStore) {
    this.featuresStore = featuresStore;
  }

  public Ff4jStatus eventRepository(EventRepositoryApiBean eventRepository) {
    this.eventRepository = eventRepository;
    return this;
  }

   /**
   * event repository resource representation
   * @return eventRepository
  **/
  @ApiModelProperty(value = "event repository resource representation")
  public EventRepositoryApiBean getEventRepository() {
    return eventRepository;
  }

  public void setEventRepository(EventRepositoryApiBean eventRepository) {
    this.eventRepository = eventRepository;
  }

  public Ff4jStatus authorizationsManager(Authorization authorizationsManager) {
    this.authorizationsManager = authorizationsManager;
    return this;
  }

   /**
   * authorization manager resource representation
   * @return authorizationsManager
  **/
  @ApiModelProperty(value = "authorization manager resource representation")
  public Authorization getAuthorizationsManager() {
    return authorizationsManager;
  }

  public void setAuthorizationsManager(Authorization authorizationsManager) {
    this.authorizationsManager = authorizationsManager;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ff4jStatus ff4jStatus = (Ff4jStatus) o;
    return Objects.equals(this.uptime, ff4jStatus.uptime) &&
        Objects.equals(this.autocreate, ff4jStatus.autocreate) &&
        Objects.equals(this.version, ff4jStatus.version) &&
        Objects.equals(this.featuresStore, ff4jStatus.featuresStore) &&
        Objects.equals(this.eventRepository, ff4jStatus.eventRepository) &&
        Objects.equals(this.authorizationsManager, ff4jStatus.authorizationsManager);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uptime, autocreate, version, featuresStore, eventRepository, authorizationsManager);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ff4jStatus {\n");
    
    sb.append("    uptime: ").append(toIndentedString(uptime)).append("\n");
    sb.append("    autocreate: ").append(toIndentedString(autocreate)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    featuresStore: ").append(toIndentedString(featuresStore)).append("\n");
    sb.append("    eventRepository: ").append(toIndentedString(eventRepository)).append("\n");
    sb.append("    authorizationsManager: ").append(toIndentedString(authorizationsManager)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}


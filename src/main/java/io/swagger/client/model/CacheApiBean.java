/*
 * FF4J (ff4j.org) WebAPI
 * Administrate and operate all tasks on your features through this api
 *
 * OpenAPI spec version: 1.5.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * cache resource representation
 */
@ApiModel(description = "cache resource representation")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-28T16:56:05.648-07:00")
public class CacheApiBean {
  @SerializedName("cacheProvider")
  private String cacheProvider = null;

  @SerializedName("cacheStore")
  private String cacheStore = null;

  @SerializedName("featureNames")
  private List<String> featureNames = null;

  @SerializedName("propertyNames")
  private List<String> propertyNames = null;

  public CacheApiBean cacheProvider(String cacheProvider) {
    this.cacheProvider = cacheProvider;
    return this;
  }

   /**
   * if a cachestore is defined
   * @return cacheProvider
  **/
  @ApiModelProperty(value = "if a cachestore is defined")
  public String getCacheProvider() {
    return cacheProvider;
  }

  public void setCacheProvider(String cacheProvider) {
    this.cacheProvider = cacheProvider;
  }

  public CacheApiBean cacheStore(String cacheStore) {
    this.cacheStore = cacheStore;
    return this;
  }

   /**
   * if a cachestore is defined
   * @return cacheStore
  **/
  @ApiModelProperty(value = "if a cachestore is defined")
  public String getCacheStore() {
    return cacheStore;
  }

  public void setCacheStore(String cacheStore) {
    this.cacheStore = cacheStore;
  }

  public CacheApiBean featureNames(List<String> featureNames) {
    this.featureNames = featureNames;
    return this;
  }

  public CacheApiBean addFeatureNamesItem(String featureNamesItem) {
    if (this.featureNames == null) {
      this.featureNames = new ArrayList<String>();
    }
    this.featureNames.add(featureNamesItem);
    return this;
  }

   /**
   * list of features within cache
   * @return featureNames
  **/
  @ApiModelProperty(value = "list of features within cache")
  public List<String> getFeatureNames() {
    return featureNames;
  }

  public void setFeatureNames(List<String> featureNames) {
    this.featureNames = featureNames;
  }

  public CacheApiBean propertyNames(List<String> propertyNames) {
    this.propertyNames = propertyNames;
    return this;
  }

  public CacheApiBean addPropertyNamesItem(String propertyNamesItem) {
    if (this.propertyNames == null) {
      this.propertyNames = new ArrayList<String>();
    }
    this.propertyNames.add(propertyNamesItem);
    return this;
  }

   /**
   * list of properties within cache
   * @return propertyNames
  **/
  @ApiModelProperty(value = "list of properties within cache")
  public List<String> getPropertyNames() {
    return propertyNames;
  }

  public void setPropertyNames(List<String> propertyNames) {
    this.propertyNames = propertyNames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CacheApiBean cacheApiBean = (CacheApiBean) o;
    return Objects.equals(this.cacheProvider, cacheApiBean.cacheProvider) &&
        Objects.equals(this.cacheStore, cacheApiBean.cacheStore) &&
        Objects.equals(this.featureNames, cacheApiBean.featureNames) &&
        Objects.equals(this.propertyNames, cacheApiBean.propertyNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacheProvider, cacheStore, featureNames, propertyNames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CacheApiBean {\n");
    
    sb.append("    cacheProvider: ").append(toIndentedString(cacheProvider)).append("\n");
    sb.append("    cacheStore: ").append(toIndentedString(cacheStore)).append("\n");
    sb.append("    featureNames: ").append(toIndentedString(featureNames)).append("\n");
    sb.append("    propertyNames: ").append(toIndentedString(propertyNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

